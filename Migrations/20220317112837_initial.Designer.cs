// <auto-generated />
using System;
using DailySharePriceApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DailySharePriceApi.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20220317112837_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DailySharePriceApi.Model.MutualFundDetails", b =>
                {
                    b.Property<int>("MutualFunBuyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MutualFunBuyId"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("MutualFundId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("MutualFunBuyId");

                    b.HasIndex("MutualFundId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("mutualFundDetails");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.MutualFundPriceDetails", b =>
                {
                    b.Property<int>("MutualFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MutualFundId"), 1L, 1);

                    b.Property<string>("MutualFundName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MutualFundPrice")
                        .HasColumnType("int");

                    b.HasKey("MutualFundId");

                    b.ToTable("mutualFundPriceDetails");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.PortfolioDetails", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioId"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PortfolioId");

                    b.HasIndex("UserId");

                    b.ToTable("portfolioDetails");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.StockDetails", b =>
                {
                    b.Property<int>("StockBuyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockBuyId"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("StockBuyId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("StockId");

                    b.ToTable("stockDetails");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.StockPriceDetails", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"), 1L, 1);

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StockPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StockId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.MutualFundDetails", b =>
                {
                    b.HasOne("DailySharePriceApi.Model.MutualFundPriceDetails", "MutualFundPriceDetails")
                        .WithMany()
                        .HasForeignKey("MutualFundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailySharePriceApi.Model.PortfolioDetails", "PortfolioDetails")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MutualFundPriceDetails");

                    b.Navigation("PortfolioDetails");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.PortfolioDetails", b =>
                {
                    b.HasOne("DailySharePriceApi.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DailySharePriceApi.Model.StockDetails", b =>
                {
                    b.HasOne("DailySharePriceApi.Model.PortfolioDetails", "PortfolioDetails")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailySharePriceApi.Model.StockPriceDetails", "StockPriceDetails")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PortfolioDetails");

                    b.Navigation("StockPriceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
